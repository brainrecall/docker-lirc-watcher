name: docker build

on:
  push:
    paths-ignore:
      - "README.md"
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - created
  schedule:
    - cron: "0 0 1 * *"

jobs:
  build:
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_TARGET_PLATFORM: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare version tag
        run: |
          echo "::set-env name=HEAD_TAG::$(git tag --points-at HEAD)"

      - name: Set tags
        run: |
          echo "::set-env name=TAG_VERSION::${HEAD_TAG//v}"
          echo "::set-env name=DOCKER_IMAGE::${GITHUB_REPOSITORY//docker-}"

      - name: Build on push
        if: success() && env.TAG_VERSION == ''
        run: |
          docker build .

      - name: Set up Docker Buildx
        if: env.TAG_VERSION != ''
        uses: crazy-max/ghaction-docker-buildx@v2
        with:
          buildx-version: latest
          skip-cache: false
          qemu-version: latest

      - name: Docker Login
        if: success() && env.TAG_VERSION != ''
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin

      - name: Build on release & Push
        if: success() && env.TAG_VERSION != ''
        run: |
          docker buildx build \
            --platform ${DOCKER_TARGET_PLATFORM} \
            --tag ${DOCKER_IMAGE}:${TAG_VERSION} ${DOCKER_IMAGE}:latest \
            --file ./Dockerfile \
            --push .
